/**
 * skylark-bootstrap-treeview - A version of bootstrap treeview that ported to running on skylarkjs ui.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-bootstrap-treeview/
 * @license MIT
 */
!function(e,t){var s=t.define,n=t.require,i="function"==typeof s&&s.amd,o=!i&&"undefined"!=typeof exports;if(!i&&!s){var d={};s=t.define=function(e,t,s){"function"==typeof s?(d[e]={factory:s,deps:t.map(function(t){return function(e,t){if("."!==e[0])return e;var s=t.split("/"),n=e.split("/");s.pop();for(var i=0;i<n.length;i++)"."!=n[i]&&(".."==n[i]?s.pop():s.push(n[i]));return s.join("/")}(t,e)}),resolved:!1,exports:null},n(e)):d[e]={factory:null,resolved:!0,exports:s}},n=t.require=function(e){if(!d.hasOwnProperty(e))throw new Error("Module "+e+" has not been defined");var s=d[e];if(!s.resolved){var i=[];s.deps.forEach(function(e){i.push(n(e))}),s.exports=s.factory.apply(t,i)||null,s.resolved=!0}return s.exports}}if(!s)throw new Error("The module utility (ex: requirejs or skylark-utils) is not loaded!");if(function(e,t){e("skylark-bootstrap-treeview/TreeView",["skylark-langx/skylark","skylark-langx/langx","skylark-domx-query","skylark-utils-dom/plugins"],function(e,t,s,n){"use strict";var i={settings:{injectStyle:!0,levels:2,expandIcon:"glyphicon glyphicon-plus",collapseIcon:"glyphicon glyphicon-minus",emptyIcon:"glyphicon",nodeIcon:"",selectedIcon:"",checkedIcon:"glyphicon glyphicon-check",uncheckedIcon:"glyphicon glyphicon-unchecked",color:void 0,backColor:void 0,borderColor:void 0,onhoverColor:"#F5F5F5",selectedColor:"#FFFFFF",selectedBackColor:"#428bca",searchResultColor:"#D9534F",searchResultBackColor:void 0,enableLinks:!1,highlightSelected:!0,highlightSearchResults:!0,showBorder:!0,showIcon:!0,showCheckbox:!1,showTags:!1,multiSelect:!1,onNodeChecked:void 0,onNodeCollapsed:void 0,onNodeDisabled:void 0,onNodeEnabled:void 0,onNodeExpanded:void 0,onNodeSelected:void 0,onNodeUnchecked:void 0,onNodeUnselected:void 0,onSearchComplete:void 0,onSearchCleared:void 0},options:{silent:!1,ignoreChildren:!1},searchOptions:{ignoreCase:!0,exactMatch:!1,revealResults:!0}},o=n.Plugin.inherit({klassName:"TreeView",pluginName:"bs3.TreeView",template:{list:'<ul class="list-group"></ul>',item:'<li class="list-group-item"></li>',indent:'<span class="indent"></span>',icon:'<span class="icon"></span>',link:'<a href="#" style="color:inherit;"></a>',badge:'<span class="badge"></span>'},css:".treeview .list-group-item{cursor:pointer}.treeview span.indent{margin-left:10px;margin-right:10px}.treeview span.icon{width:12px;margin-right:5px}.treeview .node-disabled{color:silver;cursor:not-allowed}",_construct:function(e,n){return this.$element=s(e),this.elementId=e.id,this.styleId=this.elementId+"-style",this.init(n),{options:this.options,init:t.proxy(this.init,this),remove:t.proxy(this.remove,this),getNode:t.proxy(this.getNode,this),getParent:t.proxy(this.getParent,this),getSiblings:t.proxy(this.getSiblings,this),getSelected:t.proxy(this.getSelected,this),getUnselected:t.proxy(this.getUnselected,this),getExpanded:t.proxy(this.getExpanded,this),getCollapsed:t.proxy(this.getCollapsed,this),getChecked:t.proxy(this.getChecked,this),getUnchecked:t.proxy(this.getUnchecked,this),getDisabled:t.proxy(this.getDisabled,this),getEnabled:t.proxy(this.getEnabled,this),selectNode:t.proxy(this.selectNode,this),unselectNode:t.proxy(this.unselectNode,this),toggleNodeSelected:t.proxy(this.toggleNodeSelected,this),collapseAll:t.proxy(this.collapseAll,this),collapseNode:t.proxy(this.collapseNode,this),expandAll:t.proxy(this.expandAll,this),expandNode:t.proxy(this.expandNode,this),toggleNodeExpanded:t.proxy(this.toggleNodeExpanded,this),revealNode:t.proxy(this.revealNode,this),checkAll:t.proxy(this.checkAll,this),checkNode:t.proxy(this.checkNode,this),uncheckAll:t.proxy(this.uncheckAll,this),uncheckNode:t.proxy(this.uncheckNode,this),toggleNodeChecked:t.proxy(this.toggleNodeChecked,this),disableAll:t.proxy(this.disableAll,this),disableNode:t.proxy(this.disableNode,this),enableAll:t.proxy(this.enableAll,this),enableNode:t.proxy(this.enableNode,this),toggleNodeDisabled:t.proxy(this.toggleNodeDisabled,this),search:t.proxy(this.search,this),clearSearch:t.proxy(this.clearSearch,this)}},init:function(e){this.tree=[],this.nodes=[],e.data&&("string"==typeof e.data&&(e.data=t.parseJSON(e.data)),this.tree=t.extend(!0,[],e.data),delete e.data),this.options=t.extend({},i.settings,e),this.destroy(),this.subscribeEvents(),this.setInitialStates({nodes:this.tree},0),this.render()},remove:function(){this.destroy(),datax.removeData(this,"treeview"),s("#"+this.styleId).remove()},destroy:function(){this.initialized&&(this.$wrapper.remove(),this.$wrapper=null,this.unsubscribeEvents(),this.initialized=!1)},unsubscribeEvents:function(){this.$element.off("click"),this.$element.off("nodeChecked"),this.$element.off("nodeCollapsed"),this.$element.off("nodeDisabled"),this.$element.off("nodeEnabled"),this.$element.off("nodeExpanded"),this.$element.off("nodeSelected"),this.$element.off("nodeUnchecked"),this.$element.off("nodeUnselected"),this.$element.off("searchComplete"),this.$element.off("searchCleared")},subscribeEvents:function(){this.unsubscribeEvents(),this.$element.on("click",t.proxy(this.clickHandler,this)),"function"==typeof this.options.onNodeChecked&&this.$element.on("nodeChecked",this.options.onNodeChecked),"function"==typeof this.options.onNodeCollapsed&&this.$element.on("nodeCollapsed",this.options.onNodeCollapsed),"function"==typeof this.options.onNodeDisabled&&this.$element.on("nodeDisabled",this.options.onNodeDisabled),"function"==typeof this.options.onNodeEnabled&&this.$element.on("nodeEnabled",this.options.onNodeEnabled),"function"==typeof this.options.onNodeExpanded&&this.$element.on("nodeExpanded",this.options.onNodeExpanded),"function"==typeof this.options.onNodeSelected&&this.$element.on("nodeSelected",this.options.onNodeSelected),"function"==typeof this.options.onNodeUnchecked&&this.$element.on("nodeUnchecked",this.options.onNodeUnchecked),"function"==typeof this.options.onNodeUnselected&&this.$element.on("nodeUnselected",this.options.onNodeUnselected),"function"==typeof this.options.onSearchComplete&&this.$element.on("searchComplete",this.options.onSearchComplete),"function"==typeof this.options.onSearchCleared&&this.$element.on("searchCleared",this.options.onSearchCleared)},setInitialStates:function(e,s){if(e.nodes){s+=1;var n=e,i=this;t.each(e.nodes,function(e,t){t.nodeId=i.nodes.length,t.parentId=n.nodeId,t.hasOwnProperty("selectable")||(t.selectable=!0),t.state=t.state||{},t.state.hasOwnProperty("checked")||(t.state.checked=!1),t.state.hasOwnProperty("disabled")||(t.state.disabled=!1),t.state.hasOwnProperty("expanded")||(!t.state.disabled&&s<i.options.levels&&t.nodes&&t.nodes.length>0?t.state.expanded=!0:t.state.expanded=!1),t.state.hasOwnProperty("selected")||(t.state.selected=!1),i.nodes.push(t),t.nodes&&i.setInitialStates(t,s)})}},clickHandler:function(e){this.options.enableLinks||e.preventDefault();var t=s(e.target),n=this.findNode(t);if(n&&!n.state.disabled){var o=t.attr("class")?t.attr("class").split(" "):[];-1!==o.indexOf("expand-icon")?(this.toggleExpandedState(n,i.options),this.render()):-1!==o.indexOf("check-icon")?(this.toggleCheckedState(n,i.options),this.render()):(n.selectable?this.toggleSelectedState(n,i.options):this.toggleExpandedState(n,i.options),this.render())}},findNode:function(e){var t=e.closest("li.list-group-item").attr("data-nodeid"),s=this.nodes[t];return s||console.log("Error: node does not exist"),s},toggleExpandedState:function(e,t){e&&this.setExpandedState(e,!e.state.expanded,t)},setExpandedState:function(e,s,n){s!==e.state.expanded&&(s&&e.nodes?(e.state.expanded=!0,n.silent||this.$element.trigger("nodeExpanded",t.extend(!0,{},e))):s||(e.state.expanded=!1,n.silent||this.$element.trigger("nodeCollapsed",t.extend(!0,{},e)),e.nodes&&!n.ignoreChildren&&t.each(e.nodes,t.proxy(function(e,t){this.setExpandedState(t,!1,n)},this))))},toggleSelectedState:function(e,t){e&&this.setSelectedState(e,!e.state.selected,t)},setSelectedState:function(e,s,n){s!==e.state.selected&&(s?(this.options.multiSelect||t.each(this.findNodes("true","g","state.selected"),t.proxy(function(e,t){this.setSelectedState(t,!1,n)},this)),e.state.selected=!0,n.silent||this.$element.trigger("nodeSelected",t.extend(!0,{},e))):(e.state.selected=!1,n.silent||this.$element.trigger("nodeUnselected",t.extend(!0,{},e))))},toggleCheckedState:function(e,t){e&&this.setCheckedState(e,!e.state.checked,t)},setCheckedState:function(e,s,n){s!==e.state.checked&&(s?(e.state.checked=!0,n.silent||this.$element.trigger("nodeChecked",t.extend(!0,{},e))):(e.state.checked=!1,n.silent||this.$element.trigger("nodeUnchecked",t.extend(!0,{},e))))},setDisabledState:function(e,s,n){s!==e.state.disabled&&(s?(e.state.disabled=!0,this.setExpandedState(e,!1,n),this.setSelectedState(e,!1,n),this.setCheckedState(e,!1,n),n.silent||this.$element.trigger("nodeDisabled",t.extend(!0,{},e))):(e.state.disabled=!1,n.silent||this.$element.trigger("nodeEnabled",t.extend(!0,{},e))))},render:function(){this.initialized||(this.$element.addClass("treeview"),this.$wrapper=s(this.template.list),this.injectStyle(),this.initialized=!0),this.$element.empty().append(this.$wrapper.empty()),this.buildTree(this.tree,0)},buildTree:function(e,n){if(e){n+=1;var i=this;t.each(e,function(e,o){for(var d=s(i.template.item).addClass("node-"+i.elementId).addClass(o.state.checked?"node-checked":"").addClass(o.state.disabled?"node-disabled":"").addClass(o.state.selected?"node-selected":"").addClass(o.searchResult?"search-result":"").attr("data-nodeid",o.nodeId).attr("style",i.buildStyleOverride(o)),r=0;r<n-1;r++)d.append(i.template.indent);var a=[];if(o.nodes?(a.push("expand-icon"),o.state.expanded?a.push(i.options.collapseIcon):a.push(i.options.expandIcon)):a.push(i.options.emptyIcon),d.append(s(i.template.icon).addClass(a.join(" "))),i.options.showIcon){var a=["node-icon"];a.push(o.icon||i.options.nodeIcon),o.state.selected&&(a.pop(),a.push(o.selectedIcon||i.options.selectedIcon||o.icon||i.options.nodeIcon)),d.append(s(i.template.icon).addClass(a.join(" ")))}if(i.options.showCheckbox){var a=["check-icon"];o.state.checked?a.push(i.options.checkedIcon):a.push(i.options.uncheckedIcon),d.append(s(i.template.icon).addClass(a.join(" ")))}if(i.options.enableLinks?d.append(s(i.template.link).attr("href",o.href).append(o.text)):d.append(o.text),i.options.showTags&&o.tags&&t.each(o.tags,function(e,t){d.append(s(i.template.badge).append(t))}),i.$wrapper.append(d),o.nodes&&o.state.expanded&&!o.state.disabled)return i.buildTree(o.nodes,n)})}},buildStyleOverride:function(e){if(e.state.disabled)return"";var t=e.color,s=e.backColor;return this.options.highlightSelected&&e.state.selected&&(this.options.selectedColor&&(t=this.options.selectedColor),this.options.selectedBackColor&&(s=this.options.selectedBackColor)),this.options.highlightSearchResults&&e.searchResult&&!e.state.disabled&&(this.options.searchResultColor&&(t=this.options.searchResultColor),this.options.searchResultBackColor&&(s=this.options.searchResultBackColor)),"color:"+t+";background-color:"+s+";"},injectStyle:function(){this.options.injectStyle&&!document.getElementById(this.styleId)&&s('<style type="text/css" id="'+this.styleId+'"> '+this.buildStyle()+" </style>").appendTo("head")},buildStyle:function(){var e=".node-"+this.elementId+"{";return this.options.color&&(e+="color:"+this.options.color+";"),this.options.backColor&&(e+="background-color:"+this.options.backColor+";"),this.options.showBorder?this.options.borderColor&&(e+="border:1px solid "+this.options.borderColor+";"):e+="border:none;",e+="}",this.options.onhoverColor&&(e+=".node-"+this.elementId+":not(.node-disabled):hover{background-color:"+this.options.onhoverColor+";}"),this.css+e},getNode:function(e){return this.nodes[e]},getParent:function(e){var t=this.identifyNode(e);return this.nodes[t.parentId]},getSiblings:function(e){var t=this.identifyNode(e),s=this.getParent(t),n=s?s.nodes:this.tree;return n.filter(function(e){return e.nodeId!==t.nodeId})},getSelected:function(){return this.findNodes("true","g","state.selected")},getUnselected:function(){return this.findNodes("false","g","state.selected")},getExpanded:function(){return this.findNodes("true","g","state.expanded")},getCollapsed:function(){return this.findNodes("false","g","state.expanded")},getChecked:function(){return this.findNodes("true","g","state.checked")},getUnchecked:function(){return this.findNodes("false","g","state.checked")},getDisabled:function(){return this.findNodes("true","g","state.disabled")},getEnabled:function(){return this.findNodes("false","g","state.disabled")},selectNode:function(e,s){this.forEachIdentifier(e,s,t.proxy(function(e,t){this.setSelectedState(e,!0,t)},this)),this.render()},unselectNode:function(e,s){this.forEachIdentifier(e,s,t.proxy(function(e,t){this.setSelectedState(e,!1,t)},this)),this.render()},toggleNodeSelected:function(e,s){this.forEachIdentifier(e,s,t.proxy(function(e,t){this.toggleSelectedState(e,t)},this)),this.render()},collapseAll:function(e){var s=this.findNodes("true","g","state.expanded");this.forEachIdentifier(s,e,t.proxy(function(e,t){this.setExpandedState(e,!1,t)},this)),this.render()},collapseNode:function(e,s){this.forEachIdentifier(e,s,t.proxy(function(e,t){this.setExpandedState(e,!1,t)},this)),this.render()},expandAll:function(e){if((e=t.extend({},i.options,e))&&e.levels)this.expandLevels(this.tree,e.levels,e);else{var s=this.findNodes("false","g","state.expanded");this.forEachIdentifier(s,e,t.proxy(function(e,t){this.setExpandedState(e,!0,t)},this))}this.render()},expandNode:function(e,s){this.forEachIdentifier(e,s,t.proxy(function(e,t){this.setExpandedState(e,!0,t),e.nodes&&t&&t.levels&&this.expandLevels(e.nodes,t.levels-1,t)},this)),this.render()},expandLevels:function(e,s,n){n=t.extend({},i.options,n),t.each(e,t.proxy(function(e,t){this.setExpandedState(t,s>0,n),t.nodes&&this.expandLevels(t.nodes,s-1,n)},this))},revealNode:function(e,s){this.forEachIdentifier(e,s,t.proxy(function(e,t){for(var s=this.getParent(e);s;)this.setExpandedState(s,!0,t),s=this.getParent(s)},this)),this.render()},toggleNodeExpanded:function(e,s){this.forEachIdentifier(e,s,t.proxy(function(e,t){this.toggleExpandedState(e,t)},this)),this.render()},checkAll:function(e){var s=this.findNodes("false","g","state.checked");this.forEachIdentifier(s,e,t.proxy(function(e,t){this.setCheckedState(e,!0,t)},this)),this.render()},checkNode:function(e,s){this.forEachIdentifier(e,s,t.proxy(function(e,t){this.setCheckedState(e,!0,t)},this)),this.render()},uncheckAll:function(e){var s=this.findNodes("true","g","state.checked");this.forEachIdentifier(s,e,t.proxy(function(e,t){this.setCheckedState(e,!1,t)},this)),this.render()},uncheckNode:function(e,s){this.forEachIdentifier(e,s,t.proxy(function(e,t){this.setCheckedState(e,!1,t)},this)),this.render()},toggleNodeChecked:function(e,s){this.forEachIdentifier(e,s,t.proxy(function(e,t){this.toggleCheckedState(e,t)},this)),this.render()},disableAll:function(e){var s=this.findNodes("false","g","state.disabled");this.forEachIdentifier(s,e,t.proxy(function(e,t){this.setDisabledState(e,!0,t)},this)),this.render()},disableNode:function(e,s){this.forEachIdentifier(e,s,t.proxy(function(e,t){this.setDisabledState(e,!0,t)},this)),this.render()},enableAll:function(e){var s=this.findNodes("true","g","state.disabled");this.forEachIdentifier(s,e,t.proxy(function(e,t){this.setDisabledState(e,!1,t)},this)),this.render()},enableNode:function(e,s){this.forEachIdentifier(e,s,t.proxy(function(e,t){this.setDisabledState(e,!1,t)},this)),this.render()},toggleNodeDisabled:function(e,s){this.forEachIdentifier(e,s,t.proxy(function(e,t){this.setDisabledState(e,!e.state.disabled,t)},this)),this.render()},forEachIdentifier:function(e,s,n){s=t.extend({},i.options,s),e instanceof Array||(e=[e]),t.each(e,t.proxy(function(e,t){n(this.identifyNode(t),s)},this))},identifyNode:function(e){return"number"==typeof e?this.nodes[e]:e},search:function(e,s){s=t.extend({},i.searchOptions,s),this.clearSearch({render:!1});var n=[];if(e&&e.length>0){s.exactMatch&&(e="^"+e+"$");var o="g";s.ignoreCase&&(o+="i"),n=this.findNodes(e,o),t.each(n,function(e,t){t.searchResult=!0})}return s.revealResults?this.revealNode(n):this.render(),this.$element.trigger("searchComplete",t.extend(!0,{},n)),n},clearSearch:function(e){e=t.extend({},{render:!0},e);var s=t.each(this.findNodes("true","g","searchResult"),function(e,t){t.searchResult=!1});e.render&&this.render(),this.$element.trigger("searchCleared",t.extend(!0,{},s))},findNodes:function(e,s,n){s=s||"g",n=n||"text";var i=this;return t.grep(this.nodes,function(t){var o=i.getNodeValue(t,n);if("string"==typeof o)return o.match(new RegExp(e,s))})},getNodeValue:function(e,t){var s=t.indexOf(".");if(s>0){var n=e[t.substring(0,s)],i=t.substring(s+1,t.length);return this.getNodeValue(n,i)}return e.hasOwnProperty(t)?e[t].toString():void 0}});return n.register(o,"treeview"),e.attach("intg.bs3.TreeView",o)}),e("skylark-bootstrap-treeview/main",["./TreeView"],function(e){return e}),e("skylark-bootstrap-treeview",["skylark-bootstrap-treeview/main"],function(e){return e})}(s),!i){var r=n("skylark-langx/skylark");o?module.exports=r:t.skylarkjs=r}}(0,this);
//# sourceMappingURL=sourcemaps/skylark-bootstrap-treeview.js.map
